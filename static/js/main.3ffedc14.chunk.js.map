{"version":3,"sources":["components/network/network.component.jsx","components/appBar/appBar.component.jsx","App.js","serviceWorker.js","index.js"],"names":["color","fire","water","earth","air","myConfig","nodeHighlightBehavior","node","size","highlightStrokeColor","link","highlightColor","width","window","innerWidth","UserGraph","props","onClickNode","nodeId","id","state","dictionary","fetch","then","response","json","payload","user","friendNodes","friendLinks","friends","forEach","friend","name","push","element","setState","linkDict","source","target","nodes","links","linkDictionary","map","data","this","config","React","Component","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","SearchAppBar","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","App","e","preventDefault","traverse","searchTerm","a","userList","discovered","stack","length","pop","userLists","cache","res","includes","console","log","users","visited","style","margin","onSubmit","TextField","placeholder","InputLabelProps","shrink","onChange","value","Button","type","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ffedc14.chunk.js","sourcesContent":["import React from \"react\";\nimport { Graph } from \"react-d3-graph\";\n\n// graph payload (with minimalist structure)\n\n// the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\n\nconst color = {\n  fire: \"#FF6961\",\n  water: \"#5AACCF\",\n  earth: \"#80C271\",\n  air: \"#EFFC93\",\n};\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: \"lightgreen\",\n    size: 120,\n    highlightStrokeColor: \"blue\",\n  },\n  link: {\n    highlightColor: \"lightblue\",\n  },\n  width: window.innerWidth - 20,\n};\n\n// graph event callbacks\n\nclass UserGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    const dictionary = { [props.user.name]: props.user.id };\n    const linkDictionary = {};\n    props.user.friends.forEach((friend) => {\n      dictionary[friend.name] = friend.id;\n      linkDictionary[friend.name + props.user.name] = true;\n      linkDictionary[props.user.name + friend.name] = true;\n    });\n\n    this.state = {\n      nodes: [\n        { id: props.user.name, color: color[props.user.element] },\n        ...props.user.friends.map((friend) => ({\n          id: friend.name,\n          color: color[friend.element],\n        })),\n      ],\n      links: [\n        ...props.user.friends.map((friend) => ({\n          source: props.user.name,\n          target: friend.name,\n        })),\n      ],\n      dictionary: dictionary,\n      linkDict: linkDictionary,\n    };\n  }\n  onClickNode = (nodeId) => {\n    const id = this.state.dictionary[nodeId];\n    const addUser = (user) => {\n      const friendNodes = [];\n      const friendLinks = [];\n\n      user.friends.forEach((friend) => {\n        if (!this.state.dictionary[friend.name]) {\n          friendNodes.push({\n            id: friend.name,\n            color: color[friend.element],\n          });\n          this.setState({\n            dictionary: {\n              ...this.state.dictionary,\n              [friend.name]: friend.id,\n            },\n          });\n\n          if (!this.state.linkDict[user.name + friend.name]) {\n            friendLinks.push({ source: user.name, target: friend.name });\n            this.setState({\n              linkDict: {\n                ...this.state.linkDict,\n                [user.name + friend.name]: true,\n                [friend.name + user.name]: true,\n              },\n            });\n          }\n        }\n      });\n\n      this.setState({\n        nodes: [...this.state.nodes, ...friendNodes],\n      });\n      this.setState({\n        links: [...this.state.links, ...friendLinks],\n      });\n    };\n    fetch(\"https://avatar.labpro.dev/friends/\" + id)\n      .then((response) => response.json())\n      .then((json) => json.payload)\n      .then(addUser);\n  };\n  render() {\n    return (\n      <Graph\n        id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n        data={{ nodes: this.state.nodes, links: this.state.links }}\n        config={myConfig}\n        onClickNode={this.onClickNode}\n      />\n    );\n  }\n}\nexport default UserGraph;\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Avatar\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}></div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport UserGraph from \"./components/network/network.component\";\nimport SearchAppBar from \"./components/appBar/appBar.component\";\nimport \"./App.css\";\n\nimport { TextField, Button } from \"@material-ui/core\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      users: {},\n      searchTerm: \"\",\n      visited: {},\n      userLists: {},\n    };\n  }\n  search = (e) => {\n    e.preventDefault();\n    this.traverse(this.state.searchTerm);\n  };\n\n  traverse = async (searchTerm, id = 1) => {\n    const userList = {};\n    const stack = [];\n    const discovered = {};\n\n    stack.push(id);\n    while (stack.length) {\n      id = stack.pop();\n      if (discovered[id]) {\n        continue;\n      }\n\n      discovered[id] = true;\n      let payload;\n      if (id in this.state.userLists) {\n        payload = userList[id];\n      } else {\n        const res = await fetch(\"https://avatar.labpro.dev/friends/\" + id, {\n          cache: \"force-cache\",\n        });\n        const json = await res.json();\n        payload = json.payload;\n      }\n      userList[payload.id] = payload;\n      if (payload.name.includes(searchTerm)) {\n        console.log(payload);\n        this.setState({ user: null });\n        this.setState({ user: payload });\n        return;\n      }\n      payload.friends.forEach((friend) => {\n        if (!discovered[friend.id]) {\n          stack.push(friend.id);\n        }\n      });\n    }\n    this.setState({ userLists: userList });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchAppBar />\n        <form\n          className=\"form\"\n          style={{ margin: \"0 10px\" }}\n          onSubmit={this.search}\n        >\n          <TextField\n            id=\"outlined-full-width\"\n            placeholder=\"Input your query here\"\n            style={{\n              width: \"100%\",\n              margin: \"20px\",\n            }}\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            onChange={(e) => this.setState({ searchTerm: e.target.value })}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            style={{\n              height: \"60px\",\n              margin: \"10px\",\n            }}\n          >\n            Search\n          </Button>\n        </form>\n        <div className=\"container\">\n          {this.state.user ? (\n            <UserGraph\n              user={this.state.user}\n              userLists={this.state.userLists}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}